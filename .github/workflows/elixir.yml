name: Elixir CI

on: [pull_request, push]

# TODO(@flowerett) revert when pipeline pass
# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]]

# env:
#   ELIXIR_VERSION: 1.9.4
#   OTP_VERSION: 22.2

jobs:
  # TODO(@flowerett) revert when pipeline pass
  # Build the dialyzer core PLT and dependency caches early.
  # lint_caches:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup elixir
  #       uses: actions/setup-elixir@v1
  #       with:
  #         elixir-version: ${{ env.ELIXIR_VERSION }} # Define the elixir version [required]
  #         otp-version: ${{ env.OTP_VERSION }} # Define the OTP version [required]
  #     - name: Cache Dependencies
  #       id: cache-deps
  #       uses: actions/cache@v1
  #       with:
  #         path: deps
  #         key: ${{ hashFiles('**/mix.lock') }}-deps
  #     - name: Get Dependencies
  #       if: steps.cache-deps.outputs.cache-hit != 'true'
  #       run: mix deps.get
  #     - name: Cache Core PLTs
  #       id: cache-core-plts
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.mix
  #         key: ${{ env.ELIXIR_VERSION }}-core-plt
  #     - name: Cache PLTs
  #       id: cache-plts
  #       uses: actions/cache@v1
  #       with:
  #         path: _build/dev
  #         key: ${{ hashFiles('**/mix.lock') }}-all-plts
  #     - name: Build PLTs
  #       if: steps.cache-core-plts.outputs.cache-hit != 'true' || steps.cache-plts.outputs.cache-hit != 'true'
  #       run: mix dialyzer --plt
  # lint:
  #   needs: lint_caches
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup elixir
  #       uses: actions/setup-elixir@v1
  #       with:
  #         elixir-version: ${{ env.ELIXIR_VERSION }} # Define the elixir version [required]
  #         otp-version: ${{ env.OTP_VERSION }} # Define the OTP version [required]
  #     - name: Cache Dependencies
  #       id: cache-deps
  #       uses: actions/cache@v1
  #       with:
  #         path: deps
  #         key: ${{ hashFiles('**/mix.lock') }}-deps
  #     - name: Cache Core PLTs
  #       id: cache-core-plts
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.mix
  #         key: ${{ env.ELIXIR_VERSION }}-core-plt
  #     - name: Cache PLTs
  #       id: cache-plts
  #       uses: actions/cache@v1
  #       with:
  #         path: _build/dev
  #         key: ${{ hashFiles('**/mix.lock') }}-all-plts
  #     - name: Check Credo
  #       run: mix credo --strict
  #     - name: Run the Dialyzer
  #       run: env MIX_ENV=test mix dialyzer
  lint:
    name: lint (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.9.4
            otp: 22.3.4

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plts-
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Install Dependencies
        run: mix do deps.get, deps.compile
      - name: Run Lint
        run: mix lint

  test:
    name: test (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})

    runs-on: ubuntu-latest

    env:
      MIX_ENV: test
      ELIXIR_ASSERT_TIMEOUT: 2000

    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.7.4
            otp: 21.3.8
          - elixir: 1.8.1
            otp: 21.3.8
          - elixir: 1.9.4
            otp: 21.3.8
          - elixir: 1.10.4
            otp: 22.3.4
          - elixir: 1.11.1
            otp: 22.3.4
          - elixir: 1.11.1
            otp: 23.1.1

    steps:
      - uses: actions/checkout@v2
      # - name: Setup elixir
        # uses: actions/setup-elixir@v1
        # with:
        #   elixir-version: ${{ matrix.pair.elixir }} # Define the elixir version [required]
        #   otp-version: ${{ matrix.pair.erlang }} # Define the OTP version [required]
      # - name: Cache Dependencies
      #   id: cache-deps
      #   uses: actions/cache@v1
      #   with:
      #     path: deps
      #     key: ${{ hashFiles('**/mix.lock') }}-deps
      # - name: Get Dependencies
      #   if: steps.cache-deps.outputs.cache-hit != 'true'
      #   run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-mix-
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Install Dependencies
        run: mix do deps.get, deps.compile
      - name: Compile PropCheck
        run: mix compile --warnings-as-errors
      - name: Run Tests
        run: PROPCHECK_DEBUG=1 PROPCHECK_VERBOSE=1 PROPCHECK_NUMTESTS=200 PROPCHECK_SEARCH_STEPS=1000 mix tests --cover --trace